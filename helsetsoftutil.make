#Makefile generated by Fortran Builder 6.0
#The following macros are machine specific
fblib = 'C:/Program Files (x86)/NAG/EFBuilder 6.0/lib'
NI_NAGFOR_Compiler = nagfor
NI_NAGFOR_CompOpts = -ideclient -abi=64 -g -C
NI_NAGFOR_NAGFORInfo = -gfb
NI_NAGFOR_CompOnly = -c
NI_NAGFOR_IFLAGS = 
NI_C_Compiler = nagfor =C
NI_C_CompOpts = -ideclient -abi=64 -g -Wc,-Wall
NI_C_CompOnly = -c
NI_IFLAGS = 
NI_CPP_Compiler = nagfor
NI_ALLOPTS = 
NI_C_LibLink = x64ar.exe
NI_C_LibOpts = rus 
NI_C_LibOutFlag = 
NI_RM = fbrm 

#File extensions used in this Makefile
.SUFFIXES:
.SUFFIXES: .f90 .o 

#Output file
NI_OUTPUT = helsetsoftutil.lib

#Target name
NI_TARGET = helsetsoftutil.lib

#Object files
NI_OBJS =	 \
	test.o \
	nrtype.o \
	nrutil.o \
	integrate.o \
	linearAlgebra.o \
	random.o \
	evalFunctions.o \
	interpolationExtrapolation.o

#Depend Object files
NI_DOBJS =	 \
	test.o \
	nrtype.o \
	nrutil.o \
	integrate.o \
	linearAlgebra.o \
	random.o \
	evalFunctions.o \
	interpolationExtrapolation.o

#Prospective Module files
NI_MODS =	 \
    'nrtype.mod' \
    'nrutil.mod' \
    'array_copy_r.mod' \
    'swap_i.mod' \
    'reallocate_rv.mod' \
    'imaxloc_r.mod' \
    'assert1.mod' \
    'assert_eq2.mod' \
    'arth_r.mod' \
    'geop_r.mod' \
    'poly_rr.mod' \
    'poly_term_rr.mod' \
    'outerprod_r.mod' \
    'outerdiff_r.mod' \
    'scatter_add_r.mod' \
    'scatter_max_r.mod' \
    'diagadd_rv.mod' \
    'diagmult_rv.mod' \
    'get_diag_rv.mod' \
    'put_diag_rv.mod' \
    'linalg.mod' \
    'svbksb_sp.mod' \
    'svdcmp_sp.mod' \
    'pythag_sp.mod' \
    'sprsin_sp.mod' \
    'sprsax_sp.mod' \
    'sprstx_sp.mod' \
    'sprsdiag_sp.mod' \
    'random.mod' \
    'ran.mod' \
    'ran0_s.mod' \
    'ran1_s.mod' \
    'ran2_s.mod' \
    'gasdev_s.mod'

#Fortran Information files
NI_FIFS =	 \
	test.fif \
	nrtype.fif \
	nrutil.fif \
	integrate.fif \
	linearAlgebra.fif \
	random.fif \
	evalFunctions.fif \
	interpolationExtrapolation.fif

#Library files
NI_LIBS = 

#Dependencies
NI_EQ==
NI_SC=\;
test.o:	test.f90
nrtype.o:	../../nrtype.f90
nrtype.mod:	../../nrtype.f90
nrutil.o:	../../nrutil.f90
nrutil.o:	nrtype.mod
nrutil.mod:	../../nrutil.f90
array_copy_r.mod:	../../nrutil.f90
swap_i.mod:	../../nrutil.f90
reallocate_rv.mod:	../../nrutil.f90
imaxloc_r.mod:	../../nrutil.f90
assert1.mod:	../../nrutil.f90
assert_eq2.mod:	../../nrutil.f90
arth_r.mod:	../../nrutil.f90
geop_r.mod:	../../nrutil.f90
poly_rr.mod:	../../nrutil.f90
poly_term_rr.mod:	../../nrutil.f90
outerprod_r.mod:	../../nrutil.f90
outerdiff_r.mod:	../../nrutil.f90
scatter_add_r.mod:	../../nrutil.f90
scatter_max_r.mod:	../../nrutil.f90
diagadd_rv.mod:	../../nrutil.f90
diagmult_rv.mod:	../../nrutil.f90
get_diag_rv.mod:	../../nrutil.f90
put_diag_rv.mod:	../../nrutil.f90
integrate.o:	integrate.f90
integrate.o:	nrtype.mod
integrate.o:	nrutil.mod
linearAlgebra.o:	linearAlgebra.f90
linearAlgebra.o:	nrtype.mod
linearAlgebra.o:	nrutil.mod
linearAlgebra.o:	xlinbcg_data.mod
linalg.mod:	linearAlgebra.f90
svbksb_sp.mod:	linearAlgebra.f90
svdcmp_sp.mod:	linearAlgebra.f90
pythag_sp.mod:	linearAlgebra.f90
sprsin_sp.mod:	linearAlgebra.f90
sprsax_sp.mod:	linearAlgebra.f90
sprstx_sp.mod:	linearAlgebra.f90
sprsdiag_sp.mod:	linearAlgebra.f90
random.o:	random.f90
random.o:	nrtype.mod
random.o:	ran_state.mod
random.o:	nrutil.mod
random.mod:	random.f90
ran.mod:	random.f90
ran0_s.mod:	random.f90
ran1_s.mod:	random.f90
ran2_s.mod:	random.f90
gasdev_s.mod:	random.f90
evalFunctions.o:	evalFunctions.f90
evalFunctions.o:	nrtype.mod
evalFunctions.o:	nrutil.mod
interpolationExtrapolation.o:	interpolationExtrapolation.f90
interpolationExtrapolation.o:	nrtype.mod
interpolationExtrapolation.o:	nrutil.mod

#Default make target rule
$(NI_TARGET):$(NI_OBJS)
	@echo @link
	$(NI_C_LibLink) $(NI_C_LibOpts) $(NI_C_LibOutFlag) \
$(NI_OUTPUT) $(NI_LIBS) $(NI_DOBJS)
	x64ranlib.exe $(NI_OUTPUT)


#Other rules
test.o:
	@echo @nagfor test.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) test.fif -c test.f90
nrtype.o:
	@echo @nagfor nrtype.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) nrtype.fif -c ../../nrtype.f90
nrutil.o:
	@echo @nagfor nrutil.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) nrutil.fif -c ../../nrutil.f90
integrate.o:
	@echo @nagfor integrate.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) integrate.fif -c integrate.f90
linearAlgebra.o:
	@echo @nagfor linearAlgebra.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) linearAlgebra.fif -c linearAlgebra.f90
random.o:
	@echo @nagfor random.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) random.fif -c random.f90
evalFunctions.o:
	@echo @nagfor evalFunctions.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) evalFunctions.fif -c evalFunctions.f90
interpolationExtrapolation.o:
	@echo @nagfor interpolationExtrapolation.f90
	$(NI_NAGFOR_Compiler) $(NI_IFLAGS) $(NI_NAGFOR_CompOpts) $(NI_NAGFOR_NAGFORInfo) interpolationExtrapolation.fif -c interpolationExtrapolation.f90

#Rebuild rule
all:clean $(NI_TARGET)

#Clean rule
clean:
	$(NI_RM) $(NI_OUTPUT) $(NI_DOBJS) $(NI_MODS) $(NI_FIFS) fbvalwatch.vwi

#Clean all rule
clean_all:
	$(NI_RM) '*.exe' '*.a' '*.dll' '*.o' '*.mod' '*.fif' '*.bak' fbvalwatch.vwi
